---
import "@fontsource/noto-sans/400.css";
import "@fontsource/noto-sans/700.css";
import "@fontsource/noto-serif/400.css";
import "@fontsource/noto-serif/700.css";
import Header from "./header.astro";
import SocialLinks from "./social-links.astro";

const { title, description } = Astro.props as {
  title: string;
  description: string;
};

const backup =
  "Jake Ord, UX designer, creator of interactive experiences, based in Newcastle, UK.";
---

<html lang='en'>
  <head>
    <meta charset='utf-8' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <meta name='viewport' content='width=device-width' />
    <meta name='generator' content={Astro.generator} />
    <title>{title ? `${title} | Jake Ord` : backup}</title>
    <meta name='description' content={description} />
    <link rel='icon' href='/favicon.png' />
    <meta name='og:title' content={title ? `${title} | Jake Ord` : backup} />
    <meta name='og:description' content={description} />
    <meta name='og:site_name' content='jakeord.vercel.app' />
    <meta name='og:locale' content='en_GB' />
    <meta name='og:type' content='website' />
    <meta name='og:image' content='/me-london.jpg' />
    <meta name='twitter:card' content='summary' />
    <meta name='twitter:site' content='@ordyboii' />
    <meta name='twitter:image' content='/me-london.jpg' />
    <meta name='twitter:description' content={description} />
  </head>
  <body class='flow'>
    <a class='skip-link' href='#content'>Skip to content</a>
    <Header />
    <main class='content grid'>
      <SocialLinks />
      <div id='content'>
        <slot />
      </div>
    </main>
  </body>
</html>

<style>
  @media (min-width: 50em) {
    .content {
      --grid-columns: auto 1fr;
    }
  }

  .skip-link {
    position: absolute;
    top: 1rem;
    left: 1rem;
    padding: 0.8rem 1.2rem;
    background-color: var(--colour-primary);
    color: var(--colour-secondary);
    opacity: 0;
  }

  .skip-link:focus {
    opacity: 1;
  }
</style>

<style is:global>
  /* TOKENS & RESET */
  :root {
    --colour-primary: hsl(50, 20%, 77%);
    --colour-secondary: hsl(200, 42%, 14%);

    --font-serif: "Noto Serif", serif;
    --font-sans: "Noto Sans", sans-serif;

    --font-bold: 700;
    --font-regular: 400;

    --font-base: 1rem;
    --font-scale: 4vw;
    --font-l: clamp(
      1.25 * var(--font-base),
      var(--font-scale),
      1.5 * var(--font-base)
    );
    --font-xl: clamp(
      1.5 * var(--font-base),
      var(--font-scale),
      1.9 * var(--font-base)
    );
    --font-2xl: clamp(
      1.9 * var(--font-base),
      var(--font-scale),
      3 * var(--font-base)
    );

    --radius: 0.8rem;
  }

  * {
    margin: 0;
    box-sizing: border-box;
  }

  html,
  body {
    min-height: 100%;
  }

  img,
  picture,
  video,
  canvas,
  svg {
    display: block;
    max-width: 100%;
  }

  input,
  button,
  textarea,
  select,
  a {
    font: inherit;
    color: inherit;
  }

  /* BASE */

  body {
    --flow: 2.4rem;

    font-family: var(--font-sans);
    line-height: 1.6;
    letter-spacing: 0.03ch;
    background-color: var(--colour-secondary);
    color: var(--colour-primary);
    max-width: 1000px;
    margin-inline: auto;
    padding: 1.2rem;
    isolation: isolate;
    overflow-x: hidden;
  }

  @media (min-width: 50em) {
    body {
      margin-block: 3rem;
    }
  }

  h1,
  h2,
  h3 {
    font-family: var(--font-serif);
    font-weight: var(--font-bold);
    line-height: 1.2;
  }

  h1 {
    font-size: var(--font-2xl);
  }

  h2 {
    font-size: var(--font-xl);
  }

  h3 {
    font-size: var(--font-l);
  }

  p {
    max-width: var(--measure, 60ch);
  }

  p[data-width="wide"] {
    --measure: 100%;
  }

  hr {
    border: 0.5px solid var(--colour-primary);
  }

  ul[class] {
    list-style: none;
    padding: 0;
  }

  a {
    color: currentColor;
  }

  a:where(:hover, :focus, :active) {
    text-decoration: none;
  }

  img {
    object-fit: cover;
  }

  ::selection {
    background-color: var(--colour-primary);
    color: var(--colour-secondary);
  }

  /* COMPOSITION */

  .stack {
    display: flex;
    gap: var(--gutter, 1rem);
    align-items: var(--stack-vertical-alignment, center);
    justify-content: var(--stack-horizontal-alignment, flex-start);
    flex-wrap: var(--stack-wrap, wrap);
    flex-direction: var(--stack-direction, row);
  }

  .grid {
    display: grid;
    gap: var(--gutter, 3rem);
    grid-template-columns: var(--grid-columns, auto);
    grid-template-rows: var(--grid-rows, auto);
  }

  @media (min-width: 50em) {
    .grid[data-cols="even"] {
      grid-auto-flow: column;
      grid-auto-columns: 1fr;
    }
  }

  :where(.flow > :not(:first-child)) {
    margin-top: var(--flow, 1rem);
  }

  /* UTILITIES */

  .flex-shrink-none {
    flex-shrink: 0;
  }
</style>
